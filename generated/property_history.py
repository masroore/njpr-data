# generated by datamodel-codegen:
#   filename:  propertyHistory.json
#   timestamp: 2023-03-21T08:04:20+00:00

from __future__ import annotations

from typing import Any, Optional

from pydantic import BaseModel, Field


class PropertyHistoryItem(BaseModel):
    gis_pin: Optional[str] = Field(None, alias="GIS_PIN")
    prior_gis_pin: Optional[str] = Field(None, alias="PRIOR_GIS_PIN")
    old_property_id: Optional[str] = Field(None, alias="Old_Property_ID")
    data_year: Optional[int] = Field(None, alias="Data_Year")
    municipality: Optional[str] = Field(None, alias="Municipality")
    block: Optional[str] = Field(None, alias="Block")
    lot: Optional[str] = Field(None, alias="Lot")
    qual: Optional[Any] = Field(None, alias="Qual")
    property_location: Optional[str] = Field(None, alias="Property_Location")
    property_class: Optional[str] = Field(None, alias="Property_Class")
    owners_name: Optional[str] = Field(None, alias="Owners_Name")
    owners_mailing_address: Optional[str] = Field(None, alias="Owners_Mailing_Address")
    city_state_zip: Optional[str] = Field(None, alias="City_State_Zip")
    yr_built: Optional[int] = Field(None, alias="Yr_Built")
    building_class: Optional[int] = Field(None, alias="Building_Class")
    updated: Optional[str] = Field(None, alias="Updated")
    zone: Optional[Any] = Field(None, alias="Zone")
    bank_code: Optional[str] = Field(None, alias="Bank_Code")
    sp_tax_cd_1: Optional[Any] = Field(None, alias="Sp_Tax_Cd_1")
    sp_tax_cd_2: Optional[Any] = Field(None, alias="Sp_Tax_Cd_2")
    sp_tax_cd_3: Optional[Any] = Field(None, alias="Sp_Tax_Cd_3")
    sp_tax_cd_4: Optional[Any] = Field(None, alias="Sp_Tax_Cd_4")
    map_page: Optional[str] = Field(None, alias="Map_Page")
    additional_lots: Optional[Any] = Field(None, alias="Additional_Lots")
    land_desc: Optional[str] = Field(None, alias="Land_Desc")
    acreage: Optional[float] = Field(None, alias="Acreage")
    building_desc: Optional[str] = Field(None, alias="Building_Desc")
    epl_own: Optional[str] = Field(None, alias="EPL_Own")
    epl_use: Optional[str] = Field(None, alias="EPL_Use")
    epl_desc: Optional[str] = Field(None, alias="EPL_Desc")
    epl_init: Optional[str] = Field(None, alias="EPL_Init")
    epl_further: Optional[str] = Field(None, alias="EPL_Further")
    epl_statute: Optional[Any] = Field(None, alias="EPL_Statute")
    epl_facility_name: Optional[str] = Field(None, alias="EPL_Facility_Name")
    sale_date: Optional[str] = Field(None, alias="Sale_Date")
    deed_book: Optional[str] = Field(None, alias="Deed_Book")
    deed_page: Optional[str] = Field(None, alias="Deed_Page")
    sale_price: Optional[int] = Field(None, alias="Sale_Price")
    nu_code: Optional[str] = Field(None, alias="NU_Code")
    land_assmnt_1: Optional[str] = Field(None, alias="Land_Assmnt_1")
    building_assmnt_1: Optional[str] = Field(None, alias="Building_Assmnt_1")
    total_assmnt_1: Optional[int] = Field(None, alias="Total_Assmnt_1")
    total_assmnt_2: Optional[int] = Field(None, alias="Total_Assmnt_2")
    record_id: Optional[str] = Field(None, alias="Record_Id")
    transaction_update_no: Optional[str] = Field(None, alias="Transaction_Update_No")
    addition_lots_2: Optional[Any] = Field(None, alias="Addition_Lots_2")
    zip_code: Optional[str] = Field(None, alias="Zip_Code")
    street_address: Optional[str] = Field(None, alias="Street_Address")
    city_state: Optional[str] = Field(None, alias="City_State")
    number_of_owners: Optional[Any] = Field(None, alias="Number_Of_Owners")
    deduction_amount: Optional[Any] = Field(None, alias="Deduction_Amount")
    sales_price_code: Optional[str] = Field(None, alias="Sales_Price_Code")
    sale_assessment: Optional[str] = Field(None, alias="Sale_Assessment")
    sale_sr1_a_un_code: Optional[str] = Field(None, alias="Sale_SR1A_Un_Code")
    no_of_dwellings: Optional[str] = Field(None, alias="No_Of_Dwellings")
    no_of_commercial_dw: Optional[Any] = Field(None, alias="No_Of_Commercial_Dw")
    multiple_occupancy: Optional[Any] = Field(None, alias="Multiple_Occupancy")
    percent_owned_code: Optional[Any] = Field(None, alias="Percent_Owned_Code")
    rebate_code: Optional[Any] = Field(None, alias="Rebate_Code")
    delinquent_code: Optional[Any] = Field(None, alias="Delinquent_Code")
    exemption_code_1: Optional[str] = Field(None, alias="Exemption_Code_1")
    exemption_amt_1: Optional[Any] = Field(None, alias="Exemption_AMT_1")
    exemption_code_2: Optional[str] = Field(None, alias="Exemption_Code_2")
    exemption_amt_2: Optional[Any] = Field(None, alias="Exemption_AMT_2")
    exemption_code_3: Optional[str] = Field(None, alias="Exemption_Code_3")
    exemption_amt_3: Optional[Any] = Field(None, alias="Exemption_AMT_3")
    exemption_code_4: Optional[Any] = Field(None, alias="Exemption_Code_4")
    exemption_amt_4: Optional[Any] = Field(None, alias="Exemption_AMT_4")
    senior_citizens_cnt: Optional[Any] = Field(None, alias="Senior_Citizens_CNT")
    veterans_cnt: Optional[Any] = Field(None, alias="Veterans_CNT")
    widows_cnt: Optional[Any] = Field(None, alias="Widows_CNT")
    surv_spouse_cnt: Optional[Any] = Field(None, alias="Surv_Spouse_CNT")
    disabled_cnt: Optional[Any] = Field(None, alias="Disabled_CNT")
    user_field_1: Optional[str] = Field(None, alias="User_Field_1")
    user_field_2: Optional[str] = Field(None, alias="User_Field_2")
    property_use_code: Optional[Any] = Field(None, alias="Property_Use_Code")
    property_flags: Optional[str] = Field(None, alias="Property_Flags")
    rebate_response_flg: Optional[Any] = Field(None, alias="Rebate_Response_FLG")
    rebate_base_year: Optional[str] = Field(None, alias="Rebate_Base_Year")
    rebate_base_year_tax: Optional[str] = Field(None, alias="Rebate_Base_Year_Tax")
    rebate_base_year_net_val: Optional[str] = Field(
        None, alias="Rebate_Base_Year_Net_Val"
    )
    last_year_tax: Optional[str] = Field(None, alias="Last_Year_Tax")
    match_method: Optional[str] = Field(None, alias="matchMethod")


class Model(BaseModel):
    property_history: Optional[list[PropertyHistoryItem]] = Field(
        None, alias="propertyHistory"
    )
